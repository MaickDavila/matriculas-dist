import{i as u,j as c,k as r}from"./index.be19ff7d.js";const _=u("programa",{state:()=>({cursos_list:[],curso_grupo_list:[],alumnoStore:c(),periodo:{},periodos:[],cursos_alumno:[]}),getters:{get_cursos_list:t=>t.cursos_list,get_cursos_ids:t=>t.cursos_list.map(s=>s.id).join(","),get_curso_grupo_list:t=>t.curso_grupo_list,get_cursos_with_grupos_checked_true:t=>t.curso_grupo_list.map(s=>{const e=s.grupos.find(o=>o.checked),a=e?e.id:0;return{expediente:t.alumnoStore.alumno.id,curso_grupo:a,periodo:1}})},actions:{async get_periodo_active(){try{const{status:t,data:s}=await r.get("core/get_periodo_active");return this.periodo=s,{status:t,data:s}}catch(t){return{error:t.message,status:t.status}}},async get_periodos(){try{const{status:t,data:s}=await r.get("core/get_periodos");return this.periodos=s,{status:t,data:s}}catch(t){return{error:t.message,status:t.status}}},async get_cursos_by_programa_id(t){try{const{status:s,data:e}=await r.get("academicos/get_cursos_by_programa_id",{params:{programa_id:t}});return this.cursos_list=e,{status:s,data:e}}catch(s){return{error:s.message,status:s.status}}},async get_cursos_grupos_by_cursos(){try{const{status:t,data:s}=await r.get("academicos/get_cursos_grupos_by_cursos",{params:{cursos:this.get_cursos_ids}});return this.curso_grupo_list=s,{status:t,data:s}}catch(t){return{error:t.message,status:t.status}}},async save_cursos_grupos(){try{const{status:t,data:s}=await r.post("academicos/bulks/matricula_bulk/",this.get_cursos_with_grupos_checked_true);return{status:t,data:s}}catch(t){return{error:t.message,status:t.status}}},async get_matricula_by_expediente_active(){try{const{status:t,data:s}=await r.get("academicos/get_matricula_by_expediente_active",{params:{expediente:this.alumnoStore.alumno.id}});return{status:t,data:s}}catch(t){return{error:t.message,status:t.status}}},async get_horarios_matriculados_by_expediente(){try{const{status:t,data:s}=await r.get("academicos/get_horarios_matriculados_by_expediente",{params:{expediente:this.alumnoStore.alumno.id}});return this.curso_grupo_list=s,{status:t,data:s}}catch(t){return{error:t.message,status:t.status}}},async get_cursos_matriculados_by_expediente(t){try{const{status:s,data:e}=await r.get("academicos/get_cursos_matriculados_by_expediente",{params:{expediente_id:this.alumnoStore.alumno.id,periodo_id:t}});return this.cursos_alumno=e,{status:s,data:e}}catch(s){return{error:s.message,status:s.status}}}}});export{_ as u};
